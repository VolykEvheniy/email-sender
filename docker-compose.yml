version: "3.9"

services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-network

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,EXTERNAL://:9093,CONTROLLER://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9094
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
    depends_on:
      - zookeeper
    networks:
      app-network:
        aliases:
          - kafka

  elasticsearch:
    image: elasticsearch:8.6.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    volumes:
      - ./data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - app-network

  kibana:
    image: kibana:8.6.1
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - app-network

  email-sender:
    build: .
    container_name: email-sender
    restart: on-failure
    ports:
      - "8081:8081"
    env_file:
      - .env
    environment:
        - SERVER_PORT=8081
        - KAFKA_TOPIC_MESSAGERECEIVED=messageReceived
        - SPRING_KAFKA_CONSUMER_GROUP_ID=email-sender
        - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
        - ELASTICSEARCH_ADDRESS=elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_started
      kafka:
        condition: service_started
    networks:
      - app-network

networks:
  app-network:
    driver: bridge